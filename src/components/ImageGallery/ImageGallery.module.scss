.galleryWrapper {
  padding: 2rem;
}

.title {
  margin-bottom: 2rem;
  font-size: clamp(2rem, 8vw, 8rem);
  text-align: center;
}

/* Masonry parent container */
.masonryList {
  /* Adjust the column-count as needed */
  column-count: 3;
  column-gap: 1rem;

  /* Responsive example (optional): 
     You can reduce columns on smaller screens */
  @media (max-width: 768px) {
    column-count: 2;
  }
  @media (max-width: 480px) {
    column-count: 1;
  }
}

/* Each "item" needs to break out on its own
   so we use `break-inside: avoid` */
.masonryItem {
  display: inline-block; /* ensure images flow properly inside columns */
  margin-bottom: 1rem;
  width: 100%;
  break-inside: avoid; /* crucial for masonry! */
  cursor: pointer;
  border-radius: 8px;
  overflow: hidden;

  /* You can add hover effects etc. */
  &:hover .image {
    transform: scale(1.05);
  }
}

.image {
  width: 100%;
  height: auto;
  display: block;
  transition: transform 0.3s ease;
}

.lightbox {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.8);
  display: flex;
  align-items: center;      /* Vertically centers children */
  justify-content: center;  /* Horizontally centers children */
  z-index: 50;
  cursor: pointer;
}

.lightboxBackground {
  position: fixed;
  inset: 0;
  background-size: cover;
  background-position: center;
  z-index: -1;
  opacity: 0.3;
}

.lightboxContent {
  /* A flex container holding the actual image + controls */
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  /* 
    This is optional but sometimes helps 
    group the image/buttons for easy styling 
  */
}

.lightboxImage {
  display: block;       /* Important: block-level to avoid any inline offset */
  max-width: 80%;
  max-height: 80%;
  object-fit: contain;  /* Prevents distortion */
  border-radius: 8px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);
}

/* Buttons */
.closeButton,
.prevButton,
.nextButton {
  position: absolute;
  color: white;
  font-size: 2rem;
  background: none;
  border: none;
  cursor: pointer;
}

.closeButton {
  top: 1rem;
  right: 1rem;
}

.prevButton {
  left: 1rem;
}

.nextButton {
  right: 1rem;
}
